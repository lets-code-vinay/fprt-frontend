[{"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\index.js":"1","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\reportWebVitals.js":"2","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\store.ts":"3","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\App.tsx":"4","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\rootReducer.js":"5","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Pages\\LoginForm\\Login.tsx":"6","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Pages\\Homepage\\Homepage.jsx":"7","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Pages\\SignUpForm\\Signup.jsx":"8","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\usersType\\userType.reducer.js":"9","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\usersType\\userType.action.js":"10","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\Loader\\Loader.js":"11","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\usersType\\userType.types.js":"12","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\TopNavBar\\TopNavBar.tsx":"13","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\NavBar\\NavBar.tsx":"14","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\ImageContainer\\ImageContainer.jsx":"15","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\RegEx\\index.js":"16","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\services\\cookie.ts":"17","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\services\\api.ts":"18","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\config\\index.ts":"19","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\photosType\\photos.action.js":"20","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\photosType\\userType.types.js":"21"},{"size":800,"mtime":1621146162000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1621146162000,"results":"24","hashOfConfig":"23"},{"size":690,"mtime":1621146162000,"results":"25","hashOfConfig":"23"},{"size":1212,"mtime":1621189377477,"results":"26","hashOfConfig":"23"},{"size":412,"mtime":1621146162000,"results":"27","hashOfConfig":"23"},{"size":5093,"mtime":1621146162000,"results":"28","hashOfConfig":"23"},{"size":872,"mtime":1621191973474,"results":"29","hashOfConfig":"23"},{"size":13054,"mtime":1621148098000,"results":"30","hashOfConfig":"23"},{"size":1895,"mtime":1621146162000,"results":"31","hashOfConfig":"23"},{"size":6149,"mtime":1621146162000,"results":"32","hashOfConfig":"23"},{"size":803,"mtime":1621146162000,"results":"33","hashOfConfig":"23"},{"size":620,"mtime":1621146162000,"results":"34","hashOfConfig":"23"},{"size":1830,"mtime":1621189547958,"results":"35","hashOfConfig":"23"},{"size":3640,"mtime":1621189520128,"results":"36","hashOfConfig":"23"},{"size":2708,"mtime":1621146162000,"results":"37","hashOfConfig":"23"},{"size":315,"mtime":1621146162000,"results":"38","hashOfConfig":"23"},{"size":832,"mtime":1621146162000,"results":"39","hashOfConfig":"23"},{"size":2107,"mtime":1621146162000,"results":"40","hashOfConfig":"23"},{"size":136,"mtime":1621146162000,"results":"41","hashOfConfig":"23"},{"size":6501,"mtime":1621190682399,"results":"42","hashOfConfig":"23"},{"size":620,"mtime":1621146162000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"8wlcuh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\index.js",[],["93","94"],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\reportWebVitals.js",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\store.ts",[],["95","96"],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\App.tsx",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\rootReducer.js",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Pages\\LoginForm\\Login.tsx",["97","98","99","100","101"],"import React, {useEffect } from \"react\";\nimport { Button, Toast, Container, Row, Col } from \"react-bootstrap\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { toast, Slide } from \"react-toastify\";\nimport './login.css';\nimport { Images } from '../../Components/ImageContainer/ImageContainer';\nimport { emailRegExp } from '../../Components/RegEx';\nimport Loader from '../../Components/Loader/Loader';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogin, adminLogin } from '../../Redux/usersType/userType.action';\nimport { deleteCookie } from \"../../services/cookie\";\n// form validation useing Yup\nfunction Login() {\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const loader = useSelector((state: any) => state.userType.isUserLoading);\n\n  const { register, handleSubmit, errors } = useForm();\n\n  // useEffect (() => {\n  //   window.localStorage.clear();\n  //   window.sessionStorage.clear();\n  //   deleteCookie('access_token')\n  // })\n\n  const admin = location.pathname.includes('/admin/login');\n  const superAdmin = location.pathname.includes('/superadmin/login');\n\n  if (loader) {\n    return (<Loader children={''} isLoading={loader} type=\"circle\" />)\n  }\n\n  const loginButton = async (formData: any) => {\n    if (admin) {\n      let result: any = await dispatch(adminLogin(formData));\n      if (result.success) {\n        history.push('/admin/dashboard');\n      } else {\n        history.push('/admin/login')\n      }\n    } else {\n      let result: any = await dispatch(userLogin(formData));\n      history.push('/homepage');\n      if (result.success) {\n        history.push('/homepage');\n      } else {\n        history.push('/login')\n      }\n    }\n  };\n  return (\n    <Row className=\" loginRow1\">\n      <Col md={7} className=\"loginLeft\">\n\n        <img src={Images.Scrap16} className=\"login-image\" alt=\"Scrap login\" />\n      </Col>\n\n      <Col md={5} className=\"loginRight\">\n\n        <div className='login-form'>\n          <Container>\n            <Row >\n              <Col sm='12' lg='7' className='main-col' style={{ padding: \"0px\", width: \"80%\" }}>\n                <div className='form-container' style={{ width: \"150%\" }}>\n                  <form className='form-horizontal' onSubmit={handleSubmit(loginButton)}>\n                    {/* username input */}\n                    <h1>Welcome {admin ? \"Admin\" : superAdmin ? \"Super\" : \"User\"}</h1>\n                    <div className='form-group'>\n                      <span className='input-icon'>\n                        <i className='fa fa-user'></i>\n                        <label>Email</label>\n                      </span>\n                      <input\n                        name='email'\n                        className='form-control'\n                        placeholder='Enter a valid email'\n                        ref={register({\n                          required: 'Please enter Email id',\n                          pattern: {\n                            value: emailRegExp,\n                            message: \"Enter a valid Email address\"\n                          }\n                        })}\n                      />\n                      {errors.email && errors.email.type === \"required\" && <p className=\"errorMessage\">{errors.email.message}</p>}\n                      {errors.email && errors.email.type === \"pattern\" && <p className=\"errorMessage\"> {errors.email.message}</p>}\n\n                    </div>\n                    <Row>\n                      <Col>\n                        <div className='form-group'>\n                          <span className='input-icon'>\n                            <i className='fa fa-user'></i>\n                            <label>Password</label>\n                          </span>\n                          <input\n                            type='password'\n                            name='password'\n                            className='form-control'\n                            placeholder='Enter password'\n                            ref={register({\n                              required: \"Password is mandatory\"\n                            })}\n                          />\n                          {errors && errors.password && errors.password.type === \"required\" && <p className=\"errorMessage\">{errors.password.message}</p>}\n                        </div>\n                      </Col>\n                    </Row>\n                    <div className='forgot-pass'>\n                      Forgot Password, <Link to=\"/forgot-password\">click Here</Link>\n                    </div><br />\n                    <div className='forgot-pass'>\n                      Already have account, <Link to=\"/signup\">Sign up</Link>\n                    </div>\n                    <Button variant='primary' type='submit'>\n                      Login\n                    </Button>\n                  </form>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </Col>\n    </Row>\n\n  );\n}\n\nexport default Login;","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Pages\\Homepage\\Homepage.jsx",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Pages\\SignUpForm\\Signup.jsx",["102","103","104","105","106"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Button, Toast, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { toast, Slide } from \"react-toastify\";\nimport './signup.css';\nimport { Images } from '../../Components/ImageContainer/ImageContainer';\n// import { userSignUp } from '../../Redux/users/users.action';\n// import { adminSignup } from '../../Redux/admin/admin.actions'\nimport { userSignUp, adminSignup } from '../../Redux/usersType/userType.action';\nimport { phoneRegExp, emailRegExp } from '../../Components/RegEx';\nimport Loader from '../../Components/Loader/Loader';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const signupStatus = useSelector(state => state.userType.status);\n  // const loader = useSelector(state => state.users.isUserLoading);\n\n  const { handleSubmit, register, errors, watch } = useForm();\n  //coparing password\n  const password = useRef({});\n  password.current = watch(\"password\", '');\n\n  const admin = location.pathname.includes('admin/signup');\n  const superAdmin = location.pathname.includes('/superadmin');\n\n  console.log('---is admin route--', admin)\n\n  // if (loader) {\n  //   return (\n  //     <Loader children={''} isLoading={loader} type={\"circle\"} />\n  //   );\n  // }\n\n  function signUpForm(formData) {\n    console.log('---1----signup button  form data ', formData);\n    if (admin) {\n       dispatch(adminSignup(formData))\n    } else {\n      dispatch(userSignUp(formData));\n    }\n  }\n  if (signupStatus === 202) {\n    history.push('/admin/login')\n  } \n\n  return (\n    <Container fluid>\n      <Row className=\" signupRow1\">\n        <Col md={7} className=\"signupLeft\">\n\n          <img src={Images.Scrap16} className=\"signup-image\" alt=\"Scrap signup\" />\n        </Col>\n\n        <Col md={5} className=\"signupRight\">\n\n          <div className='signup-form'>\n            <Container>\n              <Row >\n                <Col sm='12' lg='7' className='main-col' style={{ padding: \"0px\", width: \"80%\" }}>\n                  <div className='form-container' style={{ width: \"150%\" }}>\n                    <form className='form-horizontal' autoComplete=\"off\" onSubmit={handleSubmit(signUpForm)}>\n                      <h1 className=\"welcomeTitle\">Welcome {admin ? \"Admin\" : superAdmin ? \"Super\" : \"user\"}</h1>\n                      {/* contact input */}\n                      <Row>\n                        <Col>\n                          <div className='form-group'>\n                            <span className='input-icon'>\n                              <i className='fa fa-user'></i>\n                              <label className=\"SignupLabel\">First Name</label>\n                            </span>\n                            <input\n                              type=\"text\"\n                              name='firstName'\n                              className='form-control'\n                              placeholder='Enter your firstName'\n                              defaultValue=\"\"\n                              // value={formState.firstName}\n                              // onChange={onChange}\n                              ref={register({\n                                required: \"First Name is required\",\n                                minLength: {\n                                  value: 2,\n                                  message: \"First Name must be greater than 2 characters\"\n                                },\n                              })}\n                            />\n                            {errors.firstName && errors.firstName.type === 'required' && <p className=\"errorMessage\" >{errors.firstName.message}</p>}\n                            {errors.firstName && errors.firstName.type === 'minLength' && <p className=\"errorMessage\" >{errors.firstName.message}</p>}\n                          </div>\n                        </Col>\n                        <Col>\n                          <div className='form-group'>\n                            <span className='input-icon'>\n                              <i className='fa fa-user'></i>\n                              <label className=\"SignupLabel\">Last Name</label>\n                            </span>\n                            <input\n                              type=\"text\"\n                              name='lastName'\n                              className='form-control'\n                              placeholder='Enter your lastName'\n                              // value={formState.lastName}\n                              // onChange={onChange}\n                              ref={register({\n                                required: \"Last Name is required\",\n                                minLength: {\n                                  value: 2,\n                                  message: \"Last Name must be greater than 2 characters\"\n                                },\n                              })}\n                            />\n                            {errors.lastName && <p className=\"errorMessage\" >{errors.lastName.message}</p>}\n                          </div>\n                        </Col>\n                      </Row>\n                      <div className='form-group'>\n                        <span className='input-icon'>\n                          <i className='fa fa-user'></i>\n                          <label className=\"SignupLabel\">Email</label>\n                        </span>\n                        <input\n                          name='email'\n                          type=\"text\"\n                          className='form-control'\n                          placeholder='Enter a valid email'\n                          // value={formState.email}\n                          // onChange={onChange}\n                          ref={register({\n                            required: \"Email is required\",\n                            minLength: {\n                              value: 2,\n                              message: \"Enter a valid email\",\n                            },\n                            pattern: {\n                              value: emailRegExp,\n                              message: \"Enter a valid e-mail address\",\n                            },\n                          })}\n                        />\n                        {errors.email && errors.email.type === 'required' && <p className=\"errorMessage\">{errors.email.message}</p>}\n                        {errors.email && errors.email.type === 'pattern' && <p className=\"errorMessage\">{errors.email.message}</p>}\n                        {errors.email && errors.email.type === 'minLength' && <p className=\"errorMessage\">{errors.email.message}</p>}\n\n\n                      </div>\n                      <div className='form-group'>\n                        <span className='input-icon'>\n                          <i className='fa fa-user'></i>\n                          <label className=\"SignupLabel\">Contact No:</label>\n                        </span>\n                        <input\n                          name='contact'\n                          type=\"number\"\n                          className='form-control'\n                          placeholder='Enter contact Number'\n                          // value={formState.contact}\n                          // onChange={onChange}\n                          ref={register({\n                            required: \"Contact Number is required\",\n                            minLength: {\n                              value: 2,\n                              message: \"Contact Number must 10 digits\"\n                            },\n                            pattern: {\n                              value: phoneRegExp,\n                              message: \"Enter a valid Phone Number\"\n                            }\n                          })}\n                        />\n                        {errors.contact && errors.contact.type === 'required' && <p className=\"errorMessage\">{errors.contact.message}</p>}\n                        {errors.contact && errors.contact.type === 'minLength' && <p className=\"errorMessage\">{errors.contact.message}</p>}\n                        {errors.contact && errors.contact.type === 'pattern' && <p className=\"errorMessage\">{errors.contact.message}</p>}\n                      </div>\n                      <Row>\n                        <Col>\n                          <div className='form-group'>\n                            <span className='input-icon'>\n                              <i className='fa fa-user'></i>\n                              <label className=\"SignupLabel\">Password</label>\n                            </span>\n                            <input\n                              type='password'\n                              name='password'\n                              className='form-control'\n                              placeholder='Enter password'\n                              // value={formState.password}\n                              // onChange={onChange}\n                              ref={register({\n                                required: \"Password is required\",\n                                minLength: {\n                                  value: 6,\n                                  message: \"Password must have 6 characters in alphaNumeric case\"\n                                },\n                              })}\n                            />\n                            {errors.password && errors.password.type === 'required' && <p className=\"errorMessage\">{errors.password.message}</p>}\n                            {errors.password && errors.password.type === 'minLength' && <p className=\"errorMessage\">{errors.password.message}</p>}\n\n                          </div>\n                        </Col>\n                        <Col>\n                          <div className='form-group'>\n                            <span className='input-icon'>\n                              <i className='fa fa-user'></i>\n                              <label className=\"SignupLabel\">Confirm Password</label>\n                            </span>\n                            <input\n                              type='password'\n                              name='confirmPassword'\n                              className='form-control'\n                              placeholder='Re Enter password'\n                              // value={formState.confirmPassword}\n                              // onChange={onChange}\n                              ref={register({\n                                required: \"Password is required\",\n                                // validate: value => value === password.current || \"Passwords did not match\"\n                              })}\n                            />\n                            {errors.confirmPassword && errors.confirmPassword.type === 'required' && <p className=\"errorMessage\">{errors.confirmPassword.message}</p>}\n                            {errors.confirmPassword && errors.confirmPassword.type === 'validate' && <p className=\"errorMessage\">{errors.confirmPassword.message}</p>}\n\n                          </div>\n                        </Col>\n                      </Row>\n                      <span>\n                        <input\n                          type=\"checkbox\"\n                          name=\"TandC\"\n                          className=\"tandC\"\n                          // value={formState.TandC}\n                          // onChange={onChange}\n                          ref={register({\n                            required: \"Kindly accepts Terms & Conditions\",\n                          })}\n                        />\n                        Terms & Conditions*\n                    </span>\n                      {errors.TandC && <p className=\"errorMessage\">{errors.TandC.message}</p>}\n                      <br /><br />\n\n                      <div className='forgot-pass'>\n                        Already have account, <Link to='/login'>Log in</Link>\n                      </div>\n                      <Button variant='primary' type='submit'\n                      // disabled={\n                      //   // !formState.firstName ||\n                      //   // !formState.lastName  ||\n                      //   // !formState.email     ||\n                      //   // !formState.contact   ||\n                      //   // !formState.password  ||\n                      //   // !formState.confirmPassword ||\n                      //   // !formState.TandC ||\n                      //   // formState.password !== formState.confirmPassword\n                      // }\n                      >\n                        Register\n                    </Button>\n                    </form>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </Col>\n      </Row>\n\n    </Container>\n  );\n}\n\nexport default Signup;","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\usersType\\userType.reducer.js",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\usersType\\userType.action.js",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\Loader\\Loader.js",["107"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader';\nimport loadingIcon from '../../assets/img/loader/Infinitygreen.svg';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nexport default function LoaderComponent( {children, isLoading, type, ...props}){\n    if(type === 'dots'){\n        return <img sfc={loadingIcon} alt=\"loader\"/>\n    }\n    return(\n        <Loader loaded={!isLoading} {...props}>\n            {children}\n        </Loader>\n    );\n}\nLoaderComponent.propTypes = {\n    ...Loader.propTypes,\n    isLoading: PropTypes.bool,\n    type: PropTypes.oneOf([\"circle\", \"dots\"]),\n    children: PropTypes.node,\n};\nLoaderComponent.defaultProps = {\n    width: 5,\n    length: 10,\n    radius: 10,\n    zIndex: 100,\n    isLoading: true,\n    type: \"circle\",\n};","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\usersType\\userType.types.js",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\TopNavBar\\TopNavBar.tsx",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\NavBar\\NavBar.tsx",["108","109","110"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dropdown } from 'react-bootstrap';\nimport './Navbar.css';\nimport { getCookie } from '../../services/cookie';\nimport { logout } from '../../Redux/usersType/userType.action';\nconst NavbBar = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // let cookieToken = JSON.parse(getCookie('access_token'));\n    // console.log('cookieToken----', cookieToken);\n    const isLoggedIn = useSelector((state: any) => state.userType.isLoggedIn)\n    const Usertoken = useSelector((state: any) => state.userType.token);\n    const userID = useSelector((state: any) => state.userType.role);\n    const userDetail = useSelector((state: any) => state.userType);\n    let strict_loggedIn = isLoggedIn && Usertoken ? true : false;\n    let localToken = window.localStorage.getItem('access_token');\n\n    console.log('userDetail in userDetail------', userDetail.userData.fullName);\n    const logoutButton = () => {\n        dispatch(logout())\n        localStorage.clear();\n        sessionStorage.clear();\n        history.push('/login');\n    }\n\n    return (\n        <>\n            <div className=\"nav-bar\">\n                <div className=\"container-fluid\">\n                    <nav className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\n                        <Link to=\"#\" className=\"navbar-brand\">MENU</Link>\n                        <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n                            <div className=\"navbar-nav mr-auto\">\n                                <Link to=\"/homepage\" className=\"nav-item nav-link active\">Home</Link> {/*-- home-- */}\n                                <Link to=\"/scrap-list\" className=\"nav-item nav-link\">Card</Link> {/*-- prices of scraps-- */}\n                                <Link to=\"/scrap-list\" className=\"nav-item nav-link\">Price Calculator</Link>  {/*-- scrap calculator-- */}\n                          </div>\n                            <div className=\"ml-auto\">\n\n                                {!localToken ?\n                                    <Link className=\"btn\" to=\"/login\">Login / Signup</Link> /*-- Login signup popup-- */\n                                    : <><Dropdown className=\"btn profile\">\n                                        <Dropdown.Toggle >\n                                            {userDetail.userData && userDetail.userData.fullName ? userDetail.userData.fullName : 'Welcome'}\n                                    </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item href=\"/profile\">{userDetail.userData.firstName}</Dropdown.Item>\n                                            <Dropdown.Item href=\"/profile\">Setting</Dropdown.Item>\n                                            <Dropdown.Item href=\"/logout\" onClick={logoutButton}>Logout</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                    <i className=\"fas fa-shopping-basket\"></i></>\n                                }\n                            </div>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n\n        </>\n    )\n}\nexport default NavbBar;","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\ImageContainer\\ImageContainer.jsx",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Components\\RegEx\\index.js",["111","112"],"export const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const emailRegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\services\\cookie.ts",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\services\\api.ts",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\config\\index.ts",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\photosType\\photos.action.js",[],"E:\\Dev\\20210512 react datasheet\\fprt\\fprt-frontend\\src\\Redux\\photosType\\userType.types.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":23},{"ruleId":"117","severity":1,"message":"122","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"123","line":5,"column":17,"nodeType":"119","messageId":"120","endLine":5,"endColumn":22},{"ruleId":"117","severity":1,"message":"124","line":12,"column":10,"nodeType":"119","messageId":"120","endLine":12,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"121","line":5,"column":18,"nodeType":"119","messageId":"120","endLine":5,"endColumn":23},{"ruleId":"125","severity":1,"message":"122","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":15},{"ruleId":"125","severity":1,"message":"123","line":7,"column":17,"nodeType":"119","messageId":"120","endLine":7,"endColumn":22},{"ruleId":"125","severity":1,"message":"127","line":14,"column":8,"nodeType":"119","messageId":"120","endLine":14,"endColumn":14},{"ruleId":"125","severity":1,"message":"128","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":19},{"ruleId":"117","severity":1,"message":"129","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":19},{"ruleId":"117","severity":1,"message":"130","line":15,"column":11,"nodeType":"119","messageId":"120","endLine":15,"endColumn":17},{"ruleId":"117","severity":1,"message":"131","line":17,"column":9,"nodeType":"119","messageId":"120","endLine":17,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":2,"column":38,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39,"suggestions":"136"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":63,"nodeType":"134","messageId":"135","endLine":2,"endColumn":64,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Toast' is defined but never used.","'toast' is defined but never used.","'Slide' is defined but never used.","'deleteCookie' is defined but never used.","no-unused-vars","'useState' is defined but never used.","'Loader' is defined but never used.","'propTypes' is defined but never used.","'getCookie' is defined but never used.","'userID' is assigned a value but never used.","'strict_loggedIn' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["140","141"],["142","143"],"no-global-assign","no-unsafe-negation",{"messageId":"144","fix":"145","desc":"146"},{"messageId":"147","fix":"148","desc":"149"},{"messageId":"144","fix":"150","desc":"146"},{"messageId":"147","fix":"151","desc":"149"},"removeEscape",{"range":"152","text":"153"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"154","text":"155"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"156","text":"153"},{"range":"157","text":"155"},[171,172],"",[171,171],"\\",[196,197],[196,196]]